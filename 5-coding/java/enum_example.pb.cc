// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum_example.proto

#include "enum_example.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace example {
namespace enumerations {
constexpr EnumMessage::EnumMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0)
  , day_of_the_week_(0)
{}
struct EnumMessageDefaultTypeInternal {
  constexpr EnumMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EnumMessageDefaultTypeInternal() {}
  union {
    EnumMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EnumMessageDefaultTypeInternal _EnumMessage_default_instance_;
}  // namespace enumerations
}  // namespace example
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_enum_5fexample_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enum_5fexample_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enum_5fexample_2eproto = nullptr;

const uint32_t TableStruct_enum_5fexample_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::example::enumerations::EnumMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::example::enumerations::EnumMessage, id_),
  PROTOBUF_FIELD_OFFSET(::example::enumerations::EnumMessage, day_of_the_week_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::example::enumerations::EnumMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::example::enumerations::_EnumMessage_default_instance_),
};

const char descriptor_table_protodef_enum_5fexample_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022enum_example.proto\022\024example.enumeratio"
  "ns\"V\n\013EnumMessage\022\n\n\002id\030\001 \001(\005\022;\n\017day_of_"
  "the_week\030\002 \001(\0162\".example.enumerations.Da"
  "yOfTheWeek*w\n\014DayOfTheWeek\022\013\n\007UNKNOWN\020\000\022"
  "\n\n\006MONDAY\020\001\022\013\n\007TUESDAY\020\002\022\r\n\tWEDNESDAY\020\003\022"
  "\014\n\010THURSDAY\020\004\022\n\n\006FRIDAY\020\005\022\014\n\010SATURDAY\020\006\022"
  "\n\n\006SUNDAY\020\007b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enum_5fexample_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enum_5fexample_2eproto = {
  false, false, 259, descriptor_table_protodef_enum_5fexample_2eproto, "enum_example.proto", 
  &descriptor_table_enum_5fexample_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_enum_5fexample_2eproto::offsets,
  file_level_metadata_enum_5fexample_2eproto, file_level_enum_descriptors_enum_5fexample_2eproto, file_level_service_descriptors_enum_5fexample_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_enum_5fexample_2eproto_getter() {
  return &descriptor_table_enum_5fexample_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_enum_5fexample_2eproto(&descriptor_table_enum_5fexample_2eproto);
namespace example {
namespace enumerations {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DayOfTheWeek_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enum_5fexample_2eproto);
  return file_level_enum_descriptors_enum_5fexample_2eproto[0];
}
bool DayOfTheWeek_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class EnumMessage::_Internal {
 public:
};

EnumMessage::EnumMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:example.enumerations.EnumMessage)
}
EnumMessage::EnumMessage(const EnumMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&day_of_the_week_) -
    reinterpret_cast<char*>(&id_)) + sizeof(day_of_the_week_));
  // @@protoc_insertion_point(copy_constructor:example.enumerations.EnumMessage)
}

inline void EnumMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&day_of_the_week_) -
    reinterpret_cast<char*>(&id_)) + sizeof(day_of_the_week_));
}

EnumMessage::~EnumMessage() {
  // @@protoc_insertion_point(destructor:example.enumerations.EnumMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EnumMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnumMessage::ArenaDtor(void* object) {
  EnumMessage* _this = reinterpret_cast< EnumMessage* >(object);
  (void)_this;
}
void EnumMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnumMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EnumMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:example.enumerations.EnumMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&day_of_the_week_) -
      reinterpret_cast<char*>(&id_)) + sizeof(day_of_the_week_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnumMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .example.enumerations.DayOfTheWeek day_of_the_week = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_day_of_the_week(static_cast<::example::enumerations::DayOfTheWeek>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnumMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:example.enumerations.EnumMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // .example.enumerations.DayOfTheWeek day_of_the_week = 2;
  if (this->_internal_day_of_the_week() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_day_of_the_week(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:example.enumerations.EnumMessage)
  return target;
}

size_t EnumMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:example.enumerations.EnumMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // .example.enumerations.DayOfTheWeek day_of_the_week = 2;
  if (this->_internal_day_of_the_week() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_day_of_the_week());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnumMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EnumMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnumMessage::GetClassData() const { return &_class_data_; }

void EnumMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EnumMessage *>(to)->MergeFrom(
      static_cast<const EnumMessage &>(from));
}


void EnumMessage::MergeFrom(const EnumMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:example.enumerations.EnumMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_day_of_the_week() != 0) {
    _internal_set_day_of_the_week(from._internal_day_of_the_week());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnumMessage::CopyFrom(const EnumMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:example.enumerations.EnumMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumMessage::IsInitialized() const {
  return true;
}

void EnumMessage::InternalSwap(EnumMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnumMessage, day_of_the_week_)
      + sizeof(EnumMessage::day_of_the_week_)
      - PROTOBUF_FIELD_OFFSET(EnumMessage, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EnumMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_enum_5fexample_2eproto_getter, &descriptor_table_enum_5fexample_2eproto_once,
      file_level_metadata_enum_5fexample_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace enumerations
}  // namespace example
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::example::enumerations::EnumMessage* Arena::CreateMaybeMessage< ::example::enumerations::EnumMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::example::enumerations::EnumMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
